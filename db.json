{
    "languages": [
        { "id": 1, "name": "Языки программирования", "parentId": null },
        { "id": 2, "name": "Процедурные", "parentId": 1 },
        { "id": 3, "name": "Непроцедурные", "parentId": 1 },
        { "id": 4, "name": "Низкого уровня (машинно-зависимые)", "parentId": 2 },
        { "id": 5, "name": "Высокого уровня (машинно-независимые)", "parentId": 2 },
        {
            "id": 6,
            "name": "Ассемблер",
            "appearedIn": 1949,
            "description": "Машинно-ориентированный язык программирования низкого уровня. Его команды прямо соответствуют отдельным командам машины или их последовательностям, также он может предоставлять дополнительные возможности облегчения программирования, такие как макрокоманды, выражения, средства обеспечения модульности программ. Может рассматриваться как автокод (см. ниже), расширенный конструкциями языков программирования высокого уровня[1][2]. Является существенно платформо-зависимым. Языки ассемблера для различных аппаратных платформ несовместимы, хотя могут быть в целом подобны.",
            "parentId": 4
        },
        { 
            "id": 7,
            "name": "Fortran",
            "parentId": 5,
            "appearedIn": 1957,
            "author": "Джон Бэкус, IBM",
            "typeSystem": "строгая, статическая",
            "description": "Первый язык программирования высокого уровня, получивший практическое применение, имеющий транслятор и испытавший дальнейшее развитие. Создан в период с 1954 по 1957 год группой программистов под руководством Джона Бэкуса в корпорации IBM. Название Fortran является сокращением от FORmula TRANslator (переводчик формул). Фортран широко используется в первую очередь для научных и инженерных вычислений. Одно из преимуществ современного Фортрана — большое количество написанных на нём программ и библиотек подпрограмм."
        },
        {
            "id": 8,
            "name": "Basic",
            "appearedIn": 1964,
            "typeSystem": "нестрогая",
            "author": "Томас Курц, Джон Кемени",
            "description": "Семейство высокоуровневых языков программирования. Был разработан в 1964 году профессорами Дартмутского колледжа Томасом Курцем и Джоном Кемени. Язык создавался как инструмент, с помощью которого студенты-непрограммисты могли самостоятельно создавать компьютерные программы для решения своих задач. Получил широкое распространение в виде различных диалектов, прежде всего как язык для домашних компьютеров. К настоящему моменту претерпел существенные изменения, значительно отойдя от характерной для первых версий простоты, граничащей с примитивизмом, и превратившись в достаточно ординарный язык высокого уровня с типичным набором возможностей. Используется как самостоятельный язык для разработки прикладных программ, главным образом, работающих под управлением ОС Windows различных версий. Также широко распространён в качестве встроенного языка прикладных программных систем различного назначения и в качестве языка для программируемых калькуляторов.",
            "parentId": 5
        },
        {
            "id": 9,
            "name": "Pascal",
            "appearedIn": 1970,
            "author": "Никлаус Вирт",
            "typeSystem": "статическая, сильная, безопасная",
            "description": "Один из наиболее известных языков программирования, используется для обучения программированию в старших классах и на первых курсах вузов, является основой для ряда других языков.",
            "parentId": 5
        },
        { 
            "id": 10,
            "name": "C (машинно-ориентированный)",
            "author": "Деннис Ритчи",
            "appearedIn": 1972,
            "typeSystem": "статическая слабая",
            "description": "Компилируемый статически типизированный язык программирования общего назначения, разработанный в 1969—1973 годах сотрудником Bell Labs Деннисом Ритчи как развитие языка Би. Первоначально был разработан для реализации операционной системы UNIX, но впоследствии был перенесён на множество других платформ. Согласно дизайну языка, его конструкции близко сопоставляются типичным машинным инструкциям, благодаря чему он нашёл применение в проектах, для которых был свойственен язык ассемблера, в том числе как в операционных системах, так и в различном прикладном программном обеспечении для множества устройств — от суперкомпьютеров до встраиваемых систем. Язык программирования Си оказал существенное влияние на развитие индустрии программного обеспечения, а его синтаксис стал основой для таких языков программирования, как C++, C#, Java и Objective-C.",
            "parentId": 5
        },
        { "id": 11, "name": "Объектно-ориентированные", "parentId": 3 },
        { "id": 12, "name": "Декларативные", "parentId": 3 },
        {
            "id": 13,
            "name": "C++",
            "author": "Страуструп, Бьёрн",
            "appearedIn": 1983,
            "typeSystem": "Статическая",
            "description": "Компилируемый, статически типизированный язык программирования общего назначения. Поддерживает такие парадигмы программирования, как процедурное программирование, объектно-ориентированное программирование, обобщённое программирование. Язык имеет богатую стандартную библиотеку, которая включает в себя распространённые контейнеры и алгоритмы, ввод-вывод, регулярные выражения, поддержку многопоточности и другие возможности. C++ сочетает свойства как высокоуровневых, так и низкоуровневых языков. В сравнении с его предшественником — языком C, — наибольшее внимание уделено поддержке объектно-ориентированного и обобщённого программирования.",
            "parentId": 11
        },
        { 
            "id": 14,
            "name": "Visual Basic",
            "author": "Microsoft",
            "appearedIn": 1991,
            "typeSystem": "Статическая типизация, Строгая типизация, Динамическая типизация",
            "description": "Язык программирования, а также интегрированная среда разработки программного обеспечения, разрабатываемые корпорацией Microsoft. Язык Visual Basic унаследовал дух, стиль и отчасти синтаксис своего предка — языка BASIC, у которого есть немало диалектов. В то же время Visual Basic сочетает в себе процедуры и элементы объектно-ориентированных и компонентно-ориентированных языков программирования. Интегрированная среда разработки VB включает инструменты для визуального проектирования пользовательского интерфейса, редактор кода с возможностью IntelliSense и подсветкой синтаксиса, а также инструменты для отладки приложений.",
            "parentId": 11
        },
        {
            "id": 15,
            "name": "Delphi",
            "author": "Андерс Хейлсберг",
            "appearedIn": 1995,
            "typeSystem": "статическая, сильная",
            "description": "Императивный, структурированный, объектно-ориентированный, высокоуровневый язык программирования со строгой статической типизацией переменных. Основная область использования — написание прикладного программного обеспечения.",
            "parentId": 11
        },
        {
            "id": 16,
            "name": "Java",
            "author": "Джеймс Гослинг и Sun Microsystems",
            "appearedIn": 1995,
            "typeSystem": "Строгая типизация",
            "description": "Строго типизированный объектно-ориентированный язык программирования, разработанный компанией Sun Microsystems (в последующем приобретённой компанией Oracle). Разработка ведётся сообществом, организованным через Java Community Process, язык и основные реализующие его технологии распространяются по лицензии GPL. Права на торговую марку принадлежат корпорации Oracle.",
            "parentId": 11
        },
        { "id": 17, "name": "Логические", "parentId": 12 },
        { "id": 18, "name": "Функциональные", "parentId": 12 },
        {
            "id": 19,
            "name": "Prolog",
            "author": "Ален Колмероэ",
            "appearedIn": 1972,
            "typeSystem": "Нет",
            "description": "Язык и система логического программирования, основанные на языке предикатов математической логики дизъюнктов Хорна, представляющей собой подмножество логики предикатов первого порядка.",
            "parentId": 17
        },
        { 
            "id": 20,
            "name": "LISP",
            "author": "Джон Маккарти",
            "appearedIn": 1958,
            "typeSystem": "сильная, динамическая",
            "description": "Семейство языков программирования, программы и данные в которых представляются системами линейных списков символов. Лисп был создан Джоном Маккарти для работ по искусственному интеллекту и до сих пор остаётся одним из основных инструментальных средств в данной области. Применяется он и как средство обычного промышленного программирования, от встроенных скриптов до веб-приложений массового использования, хотя популярным его назвать нельзя.",
            "parentId": 18
        }
    ]
}